`timescale 1ns / 1ps

// Testbench for 2-to-4 decoder using arrays

module testbench0reg ();
    reg a[1:0], y[3:0];
    decoder2to4reg test( a[1:0], y[3:0]);
    initial begin
        a[0] = 0; a[1] = 0; #20;
        a[0] = 1; #20;
        a[0] = 0; a[1] = 1; #20;
        a[0] = 1; #20;
    $stop;
    end
endmodule

// Testbench for 2-to-4 decoder

module testbench0 ();
    logic a0, a1, y0, y1, y2, y3;
    decoder2to4 test( a0, a1, y0, y1, y2, y3);
    initial begin
        a0 = 0; a1 = 0; #20;
        a0 = 1; #20;
        a0 = 0; a1 = 1; #20;
        a0 = 1; #20;
    $stop;
    end
endmodule

// Testbench for 2-to-1 multiplexer

module testbench1();
    logic d0, d1, s0, y;
    mux2to1 test( d0, d1, s0, y);
    initial begin
        s0 = 0; d0 = 0; d1 = 0; #10;
        d0 = 1; #10;
        d0 = 0; d1 = 1; #10;
        d0 = 1; #10;
        s0 = 1; #10;
        d0 = 0; #10;
        d0 = 1; d1 = 0; #10;
        d0 = 0; #10;
    $stop;
    end
endmodule

// Testbench for 4-to-1 mux
module testbench2();
    logic d0, d1, d2, d3, s1, s0, y;
    mux4to1 test(d0, d1, d2, d3, s1, s0, y);
    initial begin
        s0 = 0; s1 = 0; 
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 1; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 1; #10;
        d0 = 0; d1 = 1; d2 = 1; d3 = 0; #10;
        d0 = 0; d1 = 1; d2 = 1; d3 = 1; #10;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; #10;
        d0 = 1; d1 = 0; d2 = 0; d3 = 1; #10;
        d0 = 1; d1 = 0; d2 = 1; d3 = 0; #10;
        d0 = 1; d1 = 0; d2 = 1; d3 = 1; #10;
        d0 = 1; d1 = 1; d2 = 0; d3 = 0; #10;
        d0 = 1; d1 = 1; d2 = 0; d3 = 1; #10;
        d0 = 1; d1 = 1; d2 = 1; d3 = 0; #10;
        d0 = 1; d1 = 1; d2 = 1; d3 = 1; #10;
        s0 = 1; s1 = 0;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 1; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 1; #10;
        d0 = 0; d1 = 1; d2 = 1; d3 = 0; #10;
        d0 = 0; d1 = 1; d2 = 1; d3 = 1; #10;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; #10;
        d0 = 1; d1 = 0; d2 = 0; d3 = 1; #10;
        d0 = 1; d1 = 0; d2 = 1; d3 = 0; #10;
        d0 = 1; d1 = 0; d2 = 1; d3 = 1; #10;
        d0 = 1; d1 = 1; d2 = 0; d3 = 0; #10;
        d0 = 1; d1 = 1; d2 = 0; d3 = 1; #10;
        d0 = 1; d1 = 1; d2 = 1; d3 = 0; #10;
        d0 = 1; d1 = 1; d2 = 1; d3 = 1; #10;
        s0 = 0; s1 = 1;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 1; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 1; #10;
        d0 = 0; d1 = 1; d2 = 1; d3 = 0; #10;
        d0 = 0; d1 = 1; d2 = 1; d3 = 1; #10;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; #10;
        d0 = 1; d1 = 0; d2 = 0; d3 = 1; #10;
        d0 = 1; d1 = 0; d2 = 1; d3 = 0; #10;
        d0 = 1; d1 = 0; d2 = 1; d3 = 1; #10;
        d0 = 1; d1 = 1; d2 = 0; d3 = 0; #10;
        d0 = 1; d1 = 1; d2 = 0; d3 = 1; #10;
        d0 = 1; d1 = 1; d2 = 1; d3 = 0; #10;
        d0 = 1; d1 = 1; d2 = 1; d3 = 1; #10;
        s0 = 1; s1 = 1;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 1; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 1; #10;
        d0 = 0; d1 = 1; d2 = 1; d3 = 0; #10;
        d0 = 0; d1 = 1; d2 = 1; d3 = 1; #10;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; #10;
        d0 = 1; d1 = 0; d2 = 0; d3 = 1; #10;
        d0 = 1; d1 = 0; d2 = 1; d3 = 0; #10;
        d0 = 1; d1 = 0; d2 = 1; d3 = 1; #10;
        d0 = 1; d1 = 1; d2 = 0; d3 = 0; #10;
        d0 = 1; d1 = 1; d2 = 0; d3 = 1; #10;
        d0 = 1; d1 = 1; d2 = 1; d3 = 0; #10;
        d0 = 1; d1 = 1; d2 = 1; d3 = 1; #10;
    $stop;
    end
endmodule

// Testbench for 8-to-1 mux

module testbench3();
    logic d0, d1, d2, d3, d4, d5, d6, d7, s2, s1, s0, y;
    mux8to1 test( d0, d1, d2, d3, d4, d5, d6, d7, s2, s1, s0, y);
    initial begin
        s0 = 0; s1 = 0; s2 = 0; 
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 1; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 1; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 1; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 1; #10;
        s0 = 1; s1 = 0; s2 = 0;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 1; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 1; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 1; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 1; #10;
        s0 = 0; s1 = 1; s2 = 0;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 1; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 1; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 1; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 1; #10;
        s0 = 1; s1 = 1; s2 = 0;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 1; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 1; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 1; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 1; #10;
        s0 = 0; s1 = 0; s2 = 1;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 1; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 1; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 1; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 1; #10;
        s0 = 1; s1 = 0; s2 = 1;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 1; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 1; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 1; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 1; #10;
        s0 = 0; s1 = 1; s2 = 1;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 1; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 1; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 1; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 1; #10;
        s0 = 1; s1 = 1; s2 = 1;
        d0 = 1; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 1; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 1; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 1; d4 = 0; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 1; d5 = 0; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 1; d6 = 0; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 1; d7 = 0; #10;
        d0 = 0; d1 = 0; d2 = 0; d3 = 0; d4 = 0; d5 = 0; d6 = 0; d7 = 1; #10;
    $stop;
    end
endmodule

// Testbench for functionF
module testbench4();
    logic a, b, c, d, f;
    functionFwithInverter fun(a, b, c, d, f);
    initial begin
        a = 0; b = 0; c = 0; d = 0; #20;
        a = 0; b = 0; c = 0; d = 1; #20;
        a = 0; b = 0; c = 1; d = 0; #20;
        a = 0; b = 0; c = 1; d = 1; #20;
        a = 0; b = 1; c = 0; d = 0; #20;
        a = 0; b = 1; c = 0; d = 1; #20;
        a = 0; b = 1; c = 1; d = 0; #20;
        a = 0; b = 1; c = 1; d = 1; #20;
        a = 1; b = 0; c = 0; d = 0; #20;
        a = 1; b = 0; c = 0; d = 1; #20;
        a = 1; b = 0; c = 1; d = 0; #20;
        a = 1; b = 0; c = 1; d = 1; #20;
        a = 1; b = 1; c = 0; d = 0; #20;
        a = 1; b = 1; c = 0; d = 1; #20;
        a = 1; b = 1; c = 1; d = 0; #20;
        a = 1; b = 1; c = 1; d = 1; #20;
    $stop;
    end
endmodule